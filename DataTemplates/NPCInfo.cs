using Microsoft.Xna.Framework;
using Terraria.Audio;

namespace tConfigWrapper.DataTemplates {
	public struct NpcInfo {
		public int? teleportStyle;
		public float? teleportTime;
		public int? netSpam;
		public float? nameOver;
		public bool? SpawnedFromStatue;
		public bool? dripping;
		public bool? drippingSlime;
		public int? altTexture;
		public Vector2? visualOffset;
		public short? catchItem;
		public short? releaseOwner;
		public int? rarity;
		public bool[] playerInteraction;
		public int? lastInteraction;
		public float? takenDamageMultiplier;
		public float? gfxOffY;
		public float? stepSpeed;
		public bool? teleporting;
		public bool? stairFall;
		public Vector2[] oldPos;
		public float[] oldRot;
		public bool? setFrameSize;
		public int? netSkip;
		public bool? netAlways;
		public int? realLife;
		public float? npcSlots;
		public bool? dontCountMe;
		public int[] buffType;
		public int[] buffTime;
		public bool[] buffImmune;
		public bool? midas;
		public bool? ichor;
		public bool? onFire;
		public bool? onFire2;
		public bool? onFrostBurn;
		public bool? poisoned;
		public bool? venom;
		public bool? shadowFlame;
		public bool? soulDrain;
		public int? lifeRegen;
		public int? lifeRegenCount;
		public int? lifeRegenExpectedLossPerSecond;
		public bool? confused;
		public bool? loveStruck;
		public bool? stinky;
		public bool? dryadWard;
		public bool? immortal;
		public bool? chaseable;
		public bool? canGhostHeal;
		public bool? javelined;
		public bool? celled;
		public bool? dryadBane;
		public bool? daybreak;
		public bool? dontTakeDamageFromHostiles;
		public bool? betsysCurse;
		public bool? oiled;
		public int? soundDelay;
		public int[] immune;
		public int? directionY;
		public int? type;
		public float[] ai;
		public float[] localAI;
		public int? aiAction;
		public int? aiStyle;
		public bool? justHit;
		public int? timeLeft;
		public int? target;
		public int? damage;
		public int? defense;
		public int? defDamage;
		public int? defDefense;
		public bool? coldDamage;
		public bool? trapImmune;
		public LegacySoundStyle HitSound;
		public LegacySoundStyle DeathSound;
		public int? life;
		public int? lifeMax;
		public Rectangle? targetRect;
		public double? frameCounter;
		public Rectangle? frame;
		public Color? color;
		public int? alpha;
		public bool? hide;
		public float? scale;
		public float? knockBackResist;
		public int? oldDirectionY;
		public int? oldTarget;
		public float? rotation;
		public bool? noGravity;
		public bool? noTileCollide;
		public bool? netUpdate;
		public bool? netUpdate2;
		public bool? collideX;
		public bool? collideY;
		public bool? boss;
		public int? spriteDirection;
		public bool? behindTiles;
		public bool? lavaImmune;
		public float? value;
		public float? extraValue;
		public bool? dontTakeDamage;
		public int? netID;
		public bool? townNPC;
		public bool? homeless;
		public int? homeTileX;
		public int? homeTileY;
		public bool? oldHomeless;
		public int? oldHomeTileX;
		public int? oldHomeTileY;
		public bool? friendly;
		public bool? closeDoor;
		public int? doorX;
		public int? doorY;
		public int? friendlyRegen;
		public int? breath;
		public int? breathCounter;
		public bool? reflectingProjectiles;
		public int? lastPortalColorIndex;
		public int? whoAmI;
		public bool? active;
		public Vector2? position;
		public Vector2? velocity;
		public Vector2? oldPosition;
		public Vector2? oldVelocity;
		public int? oldDirection;
		public int? direction;
		public int? width;
		public int? height;
		public bool? wet;
		public bool? honeyWet;
		public byte? wetCount;
		public bool? lavaWet;
	}
}