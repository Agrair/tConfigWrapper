using Microsoft.Xna.Framework;

namespace tConfigWrapper.Common.DataTemplates {
	public struct ProjectileInfo {
		public float? ownerHitCheckDistance;
		public bool? arrow;
		public int? numHits;
		public bool? bobber;
		public bool? netImportant;
		public bool? noDropItem;
		public bool? counterweight;
		public float? scale;
		public float? rotation;
		public int? type;
		public int? alpha;
		public bool? sentry;
		public short? glowMask;
		public int? owner;
		public float[] ai;
		public float[] localAI;
		public float? gfxOffY;
		public float? stepSpeed;
		public int? aiStyle;
		public int? timeLeft;
		public int? soundDelay;
		public int? damage;
		public int? spriteDirection;
		public bool? hostile;
		public float? knockBack;
		public bool? friendly;
		public int? penetrate;
		public int[] localNPCImmunity;
		public bool? usesLocalNPCImmunity;
		public bool? usesIDStaticNPCImmunity;
		public int? maxPenetrate;
		public int? identity;
		public float? light;
		public bool? netUpdate;
		public bool? netUpdate2;
		public int? netSpam;
		public Vector2[] oldPos;
		public float[] oldRot;
		public int[] oldSpriteDirection;
		public bool? minion;
		public float? minionSlots;
		public int? minionPos;
		public int? restrikeDelay;
		public bool? tileCollide;
		public int? extraUpdates;
		public int? numUpdates;
		public bool? ignoreWater;
		public bool? hide;
		public bool? ownerHitCheck;
		public int[] playerImmune;
		public string miscText;
		public bool? melee;
		public bool? ranged;
		public bool? thrown;
		public bool? magic;
		public bool? coldDamage;
		public bool? noEnchantments;
		public bool? trap;
		public bool? npcProj;
		public int? frameCounter;
		public int? frame;
		public bool? manualDirectionChange;
		public int? projUUID;
		public int? localNPCHitCooldown;
		public int? idStaticNPCHitCooldown;
		public int? whoAmI;
		public bool? active;
		public Vector2? position;
		public Vector2? velocity;
		public Vector2? oldPosition;
		public Vector2? oldVelocity;
		public int? oldDirection;
		public int? direction;
		public int? width;
		public int? height;
		public bool? wet;
		public bool? honeyWet;
		public byte? wetCount;
		public bool? lavaWet;
	}
}
